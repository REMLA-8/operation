- hosts: controllers
  become: yes
  tasks:
    - name: Install Helm
      shell: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Install Kubernetes Dashboard via Helm
      shell: |
        helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/
        helm install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --namespace kubernetes-dashboard --create-namespace

    - name: Create admin service account for Kubernetes Dashboard
      shell: |
        kubectl create serviceaccount admin-user -n kubernetes-dashboard
        kubectl create clusterrolebinding admin-user-binding --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:admin-user

    - name: Install Prometheus via Helm
      shell: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        helm install prometheus prometheus-community/prometheus --namespace monitoring --create-namespace --set server.service.type=NodePort

    - name: Install Grafana via Helm
      shell: |
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update
        helm install grafana grafana/grafana --namespace monitoring --create-namespace --set service.type=NodePort

    - name: Get Prometheus NodePort
      shell: kubectl get svc -n monitoring prometheus-server -o jsonpath='{.spec.ports[0].nodePort}'
      register: prometheus_nodeport

    - name: Get Grafana NodePort
      shell: kubectl get svc -n monitoring grafana -o jsonpath='{.spec.ports[0].nodePort}'
      register: grafana_nodeport

    - name: Print Prometheus NodePort
      debug:
        msg: "Prometheus is available at NodePort {{ prometheus_nodeport.stdout }}"

    - name: Print Grafana NodePort
      debug:
        msg: "Grafana is available at NodePort {{ grafana_nodeport.stdout }}"
